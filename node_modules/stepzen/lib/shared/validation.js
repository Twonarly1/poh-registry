"use strict";
// Copyright (c) 2020,2021,2022, StepZen, Inc.
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateSchema = exports.validateConfigurationset = void 0;
const errors_1 = require("@oclif/errors");
const fs = require("fs");
const glob = require("glob");
const yaml = require("yaml");
// Validate the Configurationset file
exports.validateConfigurationset = async (file) => {
    if (!file) {
        throw new errors_1.CLIError('You must provide a file path');
    }
    if (!fs.existsSync(file)) {
        throw new errors_1.CLIError('The file does not exist');
    }
    const content = fs.readFileSync(file, 'utf8');
    // Ensure the file is valid YAML
    try {
        yaml.parse(content);
    }
    catch (_a) {
        throw new errors_1.CLIError('The file is not valid YAML');
    }
};
// Validate the Schema directory
exports.validateSchema = async (directory) => {
    if (!directory) {
        throw new errors_1.CLIError('You must provide a directory path');
    }
    if (!fs.existsSync(directory)) {
        throw new errors_1.CLIError('The directory does not exist');
    }
    // Ensure there's a root `index.graphql` file
    const allSchemaFiles = glob.sync('index.graphql', { cwd: directory });
    if (allSchemaFiles.length === 0) {
        throw new errors_1.CLIError('Schemas must include an `index.graphql` file');
    }
};
