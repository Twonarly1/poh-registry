"use strict";
// Copyright (c) 2020,2021,2022, StepZen, Inc.
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDashboardInterface = void 0;
const fs = require("fs-extra");
const os = require("os");
const path = require("path");
const deploy_1 = require("../commands/deploy");
const constants_1 = require("../shared/constants");
const { merge } = require('@stepzen/transpiler');
exports.createDashboardInterface = (workspace) => ({
    endpoint: constants_1.STEPZEN_GENERATOR_ENGINES_ENDPOINT,
    onStart: async () => {
        await deploy_1.default.run([
            constants_1.STEPZEN_GENERATOR_ENGINES_ENDPOINT,
            '--schema',
            constants_1.STEPZEN_GENERATOR_ENGINES_SCHEMA,
            '--silent',
        ]);
    },
    onImport: async (id, files) => {
        const tmp = path.join(os.tmpdir(), `stepzen-generated-schema-${Date.now()}`);
        fs.ensureDirSync(tmp);
        for (const file of files) {
            const cleaned = file.name.replace(os.tmpdir(), '');
            const dir = path.join(tmp, cleaned);
            fs.writeFileSync(dir, file.content);
        }
        const built = await merge(workspace.schema, {
            name: id,
            source: tmp,
        }, {
            silent: true,
        });
        fs.copySync(built, workspace.schema);
        fs.removeSync(built);
        fs.removeSync(tmp);
        return {
            success: true,
        };
    },
});
