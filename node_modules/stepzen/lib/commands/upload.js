"use strict";
// Copyright (c) 2020,2021,2022, StepZen, Inc.
Object.defineProperty(exports, "__esModule", { value: true });
// This file contains the code for the `stepzen upload` command.
// The upload command transfers resources on your local file system
// to Stepzen. You have to upload your resources before you can
// deploy them. This is because stepzen will automatically keep your
// endpoints live in the events of hardware and other failures.
// Resources that can be uploaded can be schemas or configurationsets.
// When uploaded, each resource is stored and referenced using a name
// provided by the user.
const command_1 = require("@oclif/command");
const errors_1 = require("@oclif/errors");
const actions_1 = require("../shared/actions");
const zen_command_1 = require("../shared/zen-command");
class Upload extends zen_command_1.default {
    async run() {
        const { args, flags } = this.parse(Upload);
        // Make sure that you definitely specify folder/name
        if (args.destination.includes('/') === false) {
            throw new errors_1.CLIError('You must specify the folder/name you want to use');
        }
        await this.ensureStepZenAccount();
        let source;
        if (args.type === 'configurationset') {
            if (!flags.file) {
                throw new errors_1.CLIError('Please specify a source file with the --file flag');
            }
            source = flags.file;
        }
        else {
            if (!flags.dir) {
                throw new errors_1.CLIError('Please specify a source directory with the --dir flag');
            }
            source = flags.dir;
        }
        if (!flags.silent) {
            this.log('Uploading...');
        }
        const response = await actions_1.upload(args.type, args.destination, source);
        if (response.success) {
            if (!flags.silent) {
                this.log(response.message);
            }
        }
        else {
            // Errors. Exit, and output the server's error response
            throw new errors_1.CLIError(JSON.stringify(response.errors) || 'An error occurred.');
        }
    }
}
exports.default = Upload;
Upload.description = 'upload to stepzen';
// The uploaded resource is either a directory or a file. In case it is the former,
// it will be packaged into a zip archive and transferred.
Upload.flags = Object.assign(Object.assign({}, zen_command_1.default.flags), { dir: command_1.flags.string({
        description: 'A directory to upload',
        exclusive: ['file'],
    }), file: command_1.flags.string({ description: 'A file to upload', exclusive: ['dir'] }), help: command_1.flags.help({ char: 'h' }), silent: command_1.flags.boolean() });
// the type and name of the uploaded resource.
Upload.args = [
    {
        name: 'type',
        required: true,
        description: 'type',
        options: ['configurationset', 'schema'],
    },
    {
        name: 'destination',
        description: 'destination',
        required: true,
    },
];
