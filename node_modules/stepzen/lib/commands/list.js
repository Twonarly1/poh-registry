"use strict";
// Copyright (c) 2020,2021,2022, StepZen, Inc.
Object.defineProperty(exports, "__esModule", { value: true });
// This file contains the code for the `stepzen list` command.
// The list command is used to retrieve the name and other metadata
// of resources stored within a stepzen account.
// You can use list to retrieve configurationsets and schemas.
const command_1 = require("@oclif/command");
const errors_1 = require("@oclif/errors");
const actions_1 = require("../shared/actions");
const zen_command_1 = require("../shared/zen-command");
class List extends zen_command_1.default {
    async run() {
        var _a;
        const { args } = this.parse(List);
        await this.ensureStepZenAccount();
        const response = await actions_1.list(args.type);
        if (response.success) {
            if (((_a = response.results) === null || _a === void 0 ? void 0 : _a.length) === 0) {
                // Success, but no results
                this.log('No results.');
            }
            else {
                // Success. The server returns a list of results.
                this.log(`${JSON.stringify(response.results, null, '  ')}`);
            }
        }
        else {
            // Error. Exit, and output the server's error response
            throw new errors_1.CLIError(JSON.stringify(response.errors) || 'An error occurred.');
        }
    }
}
exports.default = List;
List.description = 'list your items';
List.flags = Object.assign(Object.assign({}, zen_command_1.default.flags), { help: command_1.flags.help({ char: 'h' }) });
List.args = [
    {
        name: 'type',
        required: true,
        description: 'type',
        options: ['configurationsets', 'schemas'],
    },
];
